---
import Header from "../../components/Header/Header.astro"
import Layout from "../../layouts/Layout.astro"
import BlogPostSection from "../../components/BlogPostSection/BlogPostSection.astro"
import lineIMG from "/profileline.svg"
import "../../styles/components/BlogPage.css"

import { getCollection, CollectionEntry } from "astro:content"

import { monthArr } from "../../API/monthApi"

export async function getStaticPaths() {
	const posts = await getCollection("blog")
	return posts.map((post) => {
		return {
			params: { slug: post.slug },
			props: { post },
		}
	})
}

interface Props {
	post: CollectionEntry<"blog">
}

const { post } = Astro.props
const { Content } = await post.render()
---

<Layout>
	<Header />
	<div class="readprogress">
		<div class="progress-container">
			<progress
				id="readbar"
				class="progress-bar"
				value="0"
				max="100"
				data-progress="75"></progress>
			<progress
				id="readbarSecond"
				class="progress-bar"
				value="0"
				max="100"
				data-progress="75"></progress>
		</div>
		<div class="readCompleteContainer">
			<div class="readOuter">
				<div class="readInner">Content Consumed!</div>
			</div>
		</div>
	</div>

	<div class="blogContainer">
		<div class="blogPageContainer">
			<div class="blogHeaderContainer">
				<div class="parallelImageConatiner">
					<img src={lineIMG} />
				</div>
				<div class="blogProfileContainer">
					<div class="blogProfileHeader">
						Parallel {post.data.category} Solution
					</div>
					<div class="blogProfileMisc">
						<div class="date">
							{
								`${
									monthArr[post.data.date.getMonth()]
								}  ${post.data.date.getDate()}`
							}
						</div><div class="readTime">
							{post.data.readtime}
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>

	<!-- Blog Content Start -->
	<div class="blogContainer">
		<div class="blog">
			<header>
				<h1 class="blogHeader">{post.data.title}</h1>
				<p class="blogDescription">{post.data.share.description}</p>
			</header>
			<Content />
		</div>
	</div>
	<!-- Blog Content End -->

	<div class="blogTagContainer">
		<div class="tagContainer">
			{post.data.tags.map((tag: any) => <div class="chips">{tag}</div>)}
		</div>
	</div>
	<div class="subscribeContainer">
		<div class="emailContainer">
			<div class="subscribeHeader">Get an email there is new publish.</div>
			<form class="subscribeInputContainer">
				<div class="emailBar">
					<input
						type="email"
						class="emailInput"
						placeholder="Your Email"
						id="emailInput"
					/>
				</div>
				<button class="subscribeButton" id="subscribe" type="submit"
					>Subscribe</button
				>
			</form><div class="emailstatus" id="emailStatusText"></div>
		</div>
	</div>
	<script type="module" src="/src/API/subscribe.js" defer></script>
	<script src="/src/components/Header/Header.ts"></script>
	<script src="/src/API/blogpost.js" defer></script>
	<BlogPostSection />
</Layout>
